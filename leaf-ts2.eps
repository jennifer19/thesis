%!PS-Adobe-3.0 EPSF-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 82 259 514 583
%%EndComments
%%BeginProlog
/bp  { gs gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l  { rlineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } def
/p1  { stroke } def
/p2  { gsave bg setrgbcolor fill grestore newpath } def
/p3  { gsave bg setrgbcolor fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
% end   .ps.prolog
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
81.64 258.94 513.64 582.94 cl
/bg { 0.7451 0.7451 0.7451 } def
0 0 0 rgb
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
153.37 334.28 24.41 35.87 r p3
182.66 334.28 24.41 143.50 r p3
211.96 334.28 24.41 189.62 r p3
241.25 334.28 24.41 56.37 r p3
270.54 334.28 24.41 46.12 r p3
299.83 334.28 24.41 25.62 r p3
329.12 334.28 24.41 10.25 r p3
358.42 334.28 24.41 20.50 r p3
387.71 334.28 24.41 10.25 r p3
417.00 334.28 24.41 10.25 r p3
446.29 334.28 24.41 30.75 r p3
81.64 258.94 513.64 582.94 cl
/ps 12 def /Font1 findfont 12 s
0 0 0 rgb
165.58 306.46 (\(0,10]) .5 0 0 t
224.16 306.46 (\(20,30]) .5 0 0 t
282.75 306.46 (\(40,50]) .5 0 0 t
341.33 306.46 (\(60,70]) .5 0 0 t
399.91 306.46 (\(80,90]) .5 0 0 t
458.50 306.46 (\(100,999]) .5 0 0 t
81.64 258.94 513.64 582.94 cl
/ps 14 def /Font2 findfont 14 s
0 0 0 rgb
312.04 548.40 (Leaf Number Distribution in TestSet-2) .5 0 0 t
/ps 12 def /Font1 findfont 12 s
312.04 277.66 (Number of Leaves) .5 0 0 t
94.60 428.14 (Number of Trees) .5 0 90 t
81.64 258.94 513.64 582.94 cl
0 0 0 rgb
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
140.68 334.28 m
0 179.37 l
o
np
140.68 334.28 m
-7.20 0 l
o
np
140.68 359.91 m
-7.20 0 l
o
np
140.68 385.53 m
-7.20 0 l
o
np
140.68 411.16 m
-7.20 0 l
o
np
140.68 436.78 m
-7.20 0 l
o
np
140.68 462.41 m
-7.20 0 l
o
np
140.68 488.03 m
-7.20 0 l
o
np
140.68 513.65 m
-7.20 0 l
o
/ps 12 def /Font1 findfont 12 s
123.40 334.28 (0) .5 0 90 t
123.40 359.91 (5) .5 0 90 t
123.40 385.53 (10) .5 0 90 t
123.40 411.16 (15) .5 0 90 t
123.40 436.78 (20) .5 0 90 t
123.40 462.41 (25) .5 0 90 t
123.40 488.03 (30) .5 0 90 t
123.40 513.65 (35) .5 0 90 t
ep
%%Trailer
%%Pages: 1
%%EOF
